<launch>

  <!-- these are the arguments you can pass this launch file, for example gui:=false -->
  <arg name="paused" default="false" />
  <arg name="use_sim_time" default="true" />
  <arg name="extra_gazebo_args" default="" />
  <arg name="gui" default="true" />
  <arg name="headless" default="false" />
  <arg name="debug" default="false" />
  <arg name="physics" default="ode" />
  <arg name="verbose" default="true" />
  <arg name="namespace" default="wamv"/>

  <!-- Initial USV location and attitude-->
  <arg name="x" default="158" />
  <arg name="y" default="108" />
  <arg name="z" default="0.1" />
  <arg name="P" default="0" />
  <arg name="R" default="0" />
  <arg name="Y" default="-2.76" />

  <!-- Allow user specified thruster configurations
       H = stern trusters on each hull
       T = H with a lateral thruster
       X = "holonomic" configuration -->
  <arg name="thrust_config" default="H" />

  <!-- Do we lock the vessel to the world? -->
  <arg name="wamv_locked" default="true" />

  <!-- VRX sensors enabled -->
  <arg name="vrx_sensors_enabled" default="true" />


    <!-- supply this argument to specify the world name within the mrs_gazebo_common_resources package -->
  <arg name="world_name" default="offshore_rig" />

    <!-- supply this argument to specity a world file from outside of the mrs_gazebo_common_resources package -->
  <arg name="world_file" default="$(find offshore_uav_pack)/worlds/$(arg world_name).world" />

    <!-- set use_sim_time flag -->
  <group if="$(arg use_sim_time)">
    <param name="/use_sim_time" value="true" />
  </group>

  <!-- set command arguments -->
  <arg unless="$(arg paused)" name="command_arg1" value="" />
  <arg     if="$(arg paused)" name="command_arg1" value="-u" />
  <arg unless="$(arg headless)" name="command_arg2" value="" />
  <arg     if="$(arg headless)" name="command_arg2" value="-r" />
  <arg unless="$(arg verbose)" name="command_arg3" value="" />
  <arg     if="$(arg verbose)" name="command_arg3" value="--verbose" />
  <arg unless="$(arg debug)" name="script_type" value="gzserver" />
  <arg     if="$(arg debug)" name="script_type" value="debug" />

  <include file="$(find mrs_simulation)/launch/mrs_drone_spawner.launch" />

    <!-- start gazebo server-->
  <node name="gazebo" pkg="gazebo_ros" type="$(arg script_type)" respawn="false" output="screen"
    args="$(arg command_arg1) $(arg command_arg2) $(arg command_arg3) -e $(arg physics) $(arg extra_gazebo_args) $(arg world_file)" />

    <!-- start gazebo client -->
  <group if="$(arg gui)">
    <node name="gazebo_gui" pkg="gazebo_ros" type="gzclient" respawn="false" output="screen" />
  </group>
  <!-- Load robot model -->
  <arg name="urdf" default="$(find wamv_gazebo)/urdf/wamv_gazebo.urdf.xacro"/>
  <param name="$(arg namespace)/robot_description"
         command="$(find xacro)/xacro &#x002D;&#x002D;inorder '$(arg urdf)'
         locked:=$(arg wamv_locked)
         thruster_config:=$(arg thrust_config)
         vrx_sensors_enabled:=$(arg vrx_sensors_enabled)
         namespace:=$(arg namespace) "/>

  <!-- Spawn model in Gazebo -->
  <node name="spawn_model" pkg="gazebo_ros" type="spawn_model"
        args="-x $(arg x) -y $(arg y) -z $(arg z)
              -R $(arg R) -P $(arg P) -Y $(arg Y)
              -urdf -param $(arg namespace)/robot_description -model wamv "/>
</launch>